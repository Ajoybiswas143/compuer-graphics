import matplotlib.pyplot as plt

def bresenham_line(x1, y1, x2, y2):
    """
    Draws a line using Bresenham's algorithm for slopes between 0 and 1.
    A complete implementation would handle all octants.
    """
    points = []
    dx = x2 - x1
    dy = y2 - y1

    # Assuming slope |m| < 1 and x1 < x2
    # A full implementation would handle all cases (slopes, directions).
    x, y = x1, y1
    p = 2 * dy - dx

    while x <= x2:
        points.append((x, y))
        x += 1
        if p < 0:
            p = p + 2 * dy
        else:
            p = p + 2 * dy - 2 * dx
            y += 1
            
    return points

# Example usage:
line_points = bresenham_line(20, 10, 30, 18)
print("Bresenham's Line Points:", line_points)

# Optional: Plotting the line
# x_coords, y_coords = zip(*line_points)
# plt.scatter(x_coords, y_coords, color='blue')
# plt.plot(x_coords, y_coords, color='red')
# plt.title("Bresenham's Line Drawing")
# plt.grid(True)
# plt.show()